# This workflow allows to check if aws credentials exists in github repositories

name: check_credentials

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_call:

  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Runs a set of commands using the runners shell
      - name: Scan for credentials all files
        id: command_normal_files
        run: echo "normal_files_value=$(grep -RPHsn '(?<![A-Z0-9])[A]{1}[K]{1}[A-Z0-9]{18}(?![A-Z0-9])' * --exclude=*.tsbuildinfo --exclude-dir=\node_modules --exclude=.gitignore --exclude-dir=\.git --exclude-dir=\dist || echo -n '0')" >> $GITHUB_OUTPUT
      - name: Validate if credentials exists  
        if: ${{ steps.command_normal_files.outputs.normal_files_value != '0' }}
        run: |
          echo "::error::AWS credentials was founded, Be careful!"
          echo "::error::${{ join(steps.command_normal_files.outputs.*, '\n') }}"
          exit 1
      - name: Scan for credentials hidden files
        id: command_hidden_files
        run: echo "hidden_files_value=$(grep -RPHsn '(?<![A-Z0-9])[A]{1}[K]{1}[A-Z0-9]{18}(?![A-Z0-9])' .[^.]* --exclude=*.tsbuildinfo --exclude-dir=\node_modules --exclude=.gitignore --exclude-dir=\.git --exclude-dir=\dist || echo -n '0')" >> $GITHUB_OUTPUT
      - name: Validate if credentials exists in hidden  
        if: ${{ steps.command_hidden_files.outputs.hidden_files_value != '0' }}
        run: |
          echo "::error::AWS credentials was founded, Be careful!"
          echo "::error::${{ steps.command_hidden_files.outputs.hidden_files_value }}"
          exit 1
      - name: Searching environment files
        id: command_environment_files
        run: echo "environment_files_value=$(find -name '*env*' || echo '0')" >> $GITHUB_OUTPUT
      - name: Validate if environment files exists  
        if: ${{ steps.command_environment_files.outputs.environment_files_value != '0' }}
        run: |
          echo "::error::Environment files was founded, watch out!"
          echo "::error::${{ join(steps.command_environment_files.outputs.*, '\n') }}"
          exit 1
      